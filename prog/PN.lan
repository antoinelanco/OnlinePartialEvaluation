fun staticmatch(p,s){
  if(equal[fst[s],"_"]){
    if(exists(p,snd[s])){0}else{2}
  }else{
    if(equal[fst[s], p]){1}else{0}
  }
}

fun addneg(c,a){
  (fst[a], add[snd[a], c])
}

fun decalg(p){
  (add[fst[p],hd[snd[p]]],tl[snd[p]])
}

fun decald(p){
  if(equal[length[fst[p]],0]){
    p
  }else{
    (rev[tl[rev[fst[p]]]],add[hd[rev[fst[p]]],snd[p]])
  }

}

fun notEmpty(d){
  if(equal[length[d],0]){
    [("_",[])]
  }else{d}
}

fun run(s,a,t,ls,dsc1,dsc2){
  if(exists(s,a)){
    (true,(dsc1,dsc2))
  }else{
    if(exists(s,t)){
      iter(ls,snd[find(s,t)],t,a,dsc1,dsc2)
    }else{
      (false,decald((dsc1,dsc2)))
    }
  }
}

fun iter(ls,t,ts,a,dsc1,dsc2){
  if(or[equal[length[t],0],equal[length[ls],0]]){
  if(equal[length[t],0]){
    (false,decald((dsc1,notEmpty(dsc2))))
  }else{
    switch(staticmatch(fst[hd[t]],hd[notEmpty(dsc2)]))[
      (0,iter(ls,tl[t],ts,a,dsc1,notEmpty(dsc2)));
      (1,let z <- run(snd[hd[t]],a,ts,tl[ls],
                  add[dsc1,hd[notEmpty(dsc2)]],
                   tl[notEmpty(dsc2)])
                   in
                   if(fst[z]){
                     (true,(fst[snd[z]],snd[snd[z]]))
                   }else{
                     iter(ls,tl[t],ts,a,fst[snd[z]],snd[snd[z]])
                   });
      (2,
        if(equal[hd[ls],fst[hd[t]]]){

          let z <- run(snd[hd[t]],a,ts,tl[ls],
                add[dsc1,(fst[hd[t]],[])],tl[notEmpty(dsc2)]) in
          if(fst[z]){
            (true,(fst[snd[z]],snd[snd[z]]))
          }else{
            iter(ls,tl[t],ts,a,fst[snd[z]],snd[snd[z]])
          }

        }else{
          iter(ls,tl[t],ts,a,dsc1,add[addneg(fst[hd[t]],hd[notEmpty(dsc2)]),
          tl[notEmpty(dsc2)]])
        }

      )
    ]
    (exception)
  }
}


run(1,[(5, "A")],
[(1,[("a", 2);("a", 3)]);(2,[("d", 4)]);(3,[("b", 4)]);(4,[("c", 5)])]
,ls,[],[])
